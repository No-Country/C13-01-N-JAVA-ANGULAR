{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.myForm = this.fb.group({\n      user: ['', [Validators.required], Validators.minLength(3)],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      password2: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  asyncmailValidator(control) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (control.value === 'correo@correo.com') {\n          resolve({\n            exists: true\n          });\n        } else {\n          resolve(null);\n        }\n      }, 1000);\n    });\n  }\n  isValidField(field) {}\n  onSubmit() {\n    this.myForm.markAllAsTouched();\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);","map":{"version":3,"names":["Component","Validators","RegisterComponent","constructor","fb","myForm","group","user","required","minLength","email","password","password2","asyncmailValidator","control","Promise","resolve","setTimeout","value","exists","isValidField","field","onSubmit","markAllAsTouched","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ANDRES BETANCUR\\C13-01 JAVA-ANGULAR_ NOCOUNTRY\\C13-01-N-JAVA-ANGULAR\\doctime-frontend\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n  public myForm: FormGroup = this.fb.group({\n\n    user: ['', [Validators.required], Validators.minLength(3)],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n    password2: ['', [Validators.required, Validators.minLength(6)]],\n  });\n\n  constructor(private fb: FormBuilder) {\n\n\n  }\n  asyncmailValidator(control: FormControl) {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        if (control.value === 'correo@correo.com') {\n          resolve({ exists: true });\n        } else {\n          resolve(null);\n        }\n      }, 1000)\n    });\n  }\n\n\n\n  isValidField(field: string) {\n\n  }\n\n  onSubmit() {\n    this.myForm.markAllAsTouched();\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAqB,gBAAgB;AAOzE,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAU5BC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IARf,KAAAC,MAAM,GAAc,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAEvCC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACN,UAAU,CAACO,QAAQ,CAAC,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC;MAC1DC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DG,SAAS,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC;KAC/D,CAAC;EAKF;EACAI,kBAAkBA,CAACC,OAAoB;IACrC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAI;MAC7BC,UAAU,CAAC,MAAK;QACd,IAAIH,OAAO,CAACI,KAAK,KAAK,mBAAmB,EAAE;UACzCF,OAAO,CAAC;YAAEG,MAAM,EAAE;UAAI,CAAE,CAAC;SAC1B,MAAM;UACLH,OAAO,CAAC,IAAI,CAAC;;MAEjB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ;EAIAI,YAAYA,CAACC,KAAa,GAE1B;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACjB,MAAM,CAACkB,gBAAgB,EAAE;EAChC;CAED;AApCYrB,iBAAiB,GAAAsB,UAAA,EAL7BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWzB,iBAAiB,CAoC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}