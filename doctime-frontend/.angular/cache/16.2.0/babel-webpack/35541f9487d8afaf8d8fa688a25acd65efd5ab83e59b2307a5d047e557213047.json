{"ast":null,"code":"var _class;\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  checkOutStatus() {\n    return this.authService.statusAuth().pipe(tap(isAuthenticated => {\n      if (!isAuthenticated) {\n        this.authService.logout();\n        this.router.navigate(['/login']);\n      }\n    }));\n  }\n  canMatch() {\n    return this.checkOutStatus();\n  }\n  canActivate() {\n    return this.checkOutStatus();\n  }\n}\n_class = AuthGuard;\n_class.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["tap","AuthGuard","constructor","authService","router","checkOutStatus","statusAuth","pipe","isAuthenticated","logout","navigate","canMatch","canActivate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ANDRES BETANCUR\\C13-01 JAVA-ANGULAR_ NOCOUNTRY\\C13-01-N-JAVA-ANGULAR\\doctime-frontend\\src\\app\\services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, CanMatch, Router } from '@angular/router';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanMatch, CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  private checkOutStatus(): boolean | Observable<boolean> {\r\n    return this.authService.statusAuth().pipe(\r\n      tap((isAuthenticated) => {\r\n        if (!isAuthenticated) {\r\n          this.authService.logout();\r\n          this.router.navigate(['/login']);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  canMatch(): boolean | Observable<boolean> {\r\n    return this.checkOutStatus();\r\n  }\r\n  canActivate(): boolean | Observable<boolean> {\r\n    return this.checkOutStatus();\r\n  }\r\n}\r\n"],"mappings":";AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;;AAItC,OAAM,MAAOC,SAAS;EACpBC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACb;EAEKC,cAAcA,CAAA;IACpB,OAAO,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE,CAACC,IAAI,CACvCP,GAAG,CAAEQ,eAAe,IAAI;MACtB,IAAI,CAACA,eAAe,EAAE;QACpB,IAAI,CAACL,WAAW,CAACM,MAAM,EAAE;QACzB,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEpC,CAAC,CAAC,CACH;EACH;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACN,cAAc,EAAE;EAC9B;EACAO,WAAWA,CAAA;IACT,OAAO,IAAI,CAACP,cAAc,EAAE;EAC9B;;SAtBWJ,SAAS;;mBAATA,MAAS,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAATjB,MAAS;EAAAkB,OAAA,EAATlB,MAAS,CAAAmB,IAAA;EAAAC,UAAA,EADI;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}